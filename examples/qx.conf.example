# QX Configuration Example
# Place this file in one of the following locations (in order of priority):
# 1. /etc/qx/qx.conf (system-wide, lowest priority)
# 2. ~/.config/qx/qx.conf (user-level)
# 3. <project-directory>/.Q/qx.conf (project-level, highest priority)

# === REQUIRED SETTINGS ===

# Model Configuration - REQUIRED (no default provided)
# You must explicitly choose your model to ensure awareness of costs and capabilities
# Format: provider/model-name or provider/organization/model-name
# 
# Examples:
#   QX_MODEL_NAME=openrouter/anthropic/claude-3.5-sonnet
#   QX_MODEL_NAME=openrouter/google/gemini-2.5-pro-preview-06-05
#   QX_MODEL_NAME=openrouter/openai/gpt-4o
#   QX_MODEL_NAME=openai/gpt-4o  # Direct from OpenAI
#   QX_MODEL_NAME=vertex_ai/gemini-1.5-pro  # Google Vertex AI
#
# See available models and pricing at: https://openrouter.ai/models
QX_MODEL_NAME=your_chosen_model_here  # REPLACE THIS WITH YOUR CHOSEN MODEL

# API Keys (choose based on your provider)
# For OpenRouter
OPENROUTER_API_KEY=sk-or-v1-your_openrouter_api_key_here

# For OpenAI (if using OpenAI directly)
# OPENAI_API_KEY=sk-your_openai_api_key_here

# For Anthropic (if using Anthropic directly)
# ANTHROPIC_API_KEY=sk-ant-your_anthropic_api_key_here

# For Google AI / Vertex AI
# GOOGLE_API_KEY=your_google_api_key_here

# For Azure OpenAI
# AZURE_API_KEY=your_azure_api_key_here
# AZURE_API_BASE=https://your-resource.openai.azure.com/
# AZURE_API_VERSION=2024-02-01

# === OPTIONAL SETTINGS ===

# Model Parameters
QX_MODEL_TEMPERATURE=0.7
QX_MODEL_MAX_TOKENS=4096
QX_MODEL_REASONING_EFFORT=medium  # Options: none, low, medium, high (for reasoning models)

# Provider Configuration (LiteLLM specific)
# Specify preferred provider order (comma-separated)
QX_MODEL_PROVIDER=OpenRouter,OpenAI,Anthropic

# Allow fallback to other providers if primary fails
QX_ALLOW_PROVIDER_FALLBACK=true

# Streaming Configuration
QX_ENABLE_STREAMING=true

# === PROVIDER-SPECIFIC SETTINGS ===

# --- Google Vertex AI ---
# QX_VERTEX_PROJECT=your-gcp-project-id   # Required for Vertex AI
# QX_VERTEX_LOCATION=us-central1          # Required for Vertex AI

# === RELIABILITY & RESILIENCE SETTINGS ===

# Retry Configuration
QX_NUM_RETRIES=3              # Number of retry attempts for failed requests
QX_RETRY_DELAY=1.0            # Base delay between retries in seconds
QX_MAX_RETRY_DELAY=60.0       # Maximum delay between retries
QX_BACKOFF_FACTOR=2.0         # Exponential backoff multiplier

# Fallback Configuration  
QX_FALLBACK_MODELS=gpt-4o,claude-3-5-sonnet-20241022,gemini-1.5-pro
QX_FALLBACK_TIMEOUT=45        # Total timeout for fallback attempts (seconds)
QX_FALLBACK_COOLDOWN=60       # Cooldown period for rate-limited models (seconds)

# Context Window Fallback Mapping (JSON format)
# Maps models to their larger context equivalents
QX_CONTEXT_WINDOW_FALLBACKS={"gpt-3.5-turbo":"gpt-3.5-turbo-16k","gpt-4":"gpt-4-32k","claude-3-haiku":"claude-3-sonnet"}

# Multiple API Key Fallbacks (JSON format)
# Backup API keys for the same provider
QX_FALLBACK_API_KEYS={"openai":["sk-backup1","sk-backup2"],"anthropic":["sk-ant-backup1"]}

# Multiple API Base Fallbacks (JSON format)  
# Backup API endpoints for the same provider
QX_FALLBACK_API_BASES={"azure":[{"api_key":"key1","api_base":"https://backup1.azure.com"},{"api_key":"key2","api_base":"https://backup2.azure.com"}]}

# Circuit Breaker Settings
QX_CIRCUIT_BREAKER_ENABLED=true
QX_CIRCUIT_BREAKER_THRESHOLD=5    # Number of failures before opening circuit
QX_CIRCUIT_BREAKER_TIMEOUT=300    # Circuit breaker timeout in seconds

# Request Timeout Settings
QX_REQUEST_TIMEOUT=120            # Individual request timeout (seconds)
QX_CONNECT_TIMEOUT=30             # Connection timeout (seconds)
QX_READ_TIMEOUT=300               # Read timeout for streaming (seconds)

# Logging Configuration
QX_LOG_LEVEL=INFO  # Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
QX_LOG_SENT=false  # Log messages sent to LLM
QX_LOG_RECEIVED=false  # Log responses from LLM
QX_DEBUG_STREAMING=false  # Debug streaming issues

# === EXAMPLE MODEL CONFIGURATIONS ===

# OpenRouter Models (recommended - access to many providers)
# QX_MODEL_NAME=openrouter/openai/gpt-4o
# QX_MODEL_NAME=openrouter/anthropic/claude-3.5-sonnet
# QX_MODEL_NAME=openrouter/google/gemini-2.5-flash-preview-05-20
# QX_MODEL_NAME=openrouter/meta-llama/llama-3.1-405b-instruct

# Direct Provider Models  
# QX_MODEL_NAME=gpt-4o                    # OpenAI direct
# QX_MODEL_NAME=claude-3-5-sonnet-20241022 # Anthropic direct
# QX_MODEL_NAME=vertex_ai/gemini-1.5-pro  # Google Vertex AI
# QX_MODEL_NAME=azure/gpt-4o              # Azure OpenAI

# Local Models
# QX_MODEL_NAME=ollama/llama3.2
# QX_MODEL_NAME=vllm/meta-llama/Llama-3.2-3B-Instruct

# === COST TRACKING & OBSERVABILITY ===

# LiteLLM Observability (optional)
# LANGFUSE_PUBLIC_KEY=pk-lf-your_langfuse_public_key
# LANGFUSE_SECRET_KEY=sk-lf-your_langfuse_secret_key
# HELICONE_API_KEY=sk-helicone-your_helicone_api_key
# LUNARY_PUBLIC_KEY=your_lunary_public_key

# === AGENT SYSTEM CONFIGURATION ===

# Default Agent Selection
QX_DEFAULT_AGENT=qx                    # Which agent to load on startup

# Agent Model Parameters (overrides for all agents unless specified in YAML)
QX_AGENT_TEMPERATURE=0.73              # Model creativity/randomness (0.0-2.0)
QX_AGENT_MAX_TOKENS=4096               # Maximum response length
QX_AGENT_TOP_P=1.0                     # Nucleus sampling parameter (0.0-1.0)
QX_AGENT_FREQUENCY_PENALTY=0.0         # Repetition penalty (-2.0 to 2.0)
QX_AGENT_PRESENCE_PENALTY=0.0          # Topic diversity penalty (-2.0 to 2.0)
QX_AGENT_REASONING_BUDGET=medium        # For reasoning models: none, low, medium, high

# Agent Metadata Defaults
QX_AGENT_NAME=qx_agent                 # Default agent name
QX_AGENT_VERSION=1.0.0                 # Default agent version
QX_AGENT_DESCRIPTION=QX Agent          # Default agent description

# Agent Execution Configuration
QX_AGENT_EXECUTION_MODE=interactive     # Default execution mode: interactive, autonomous, hybrid
QX_AGENT_MAX_EXECUTION_TIME=300        # Maximum execution time per task (seconds)
QX_AGENT_MAX_ITERATIONS=10             # Maximum iterations per task

# Agent Tools Configuration
QX_AGENT_TOOLS=                        # Default tools for agents (comma-separated)
QX_AGENT_MAX_TOOL_CALLS=10             # Maximum tool calls per conversation turn

# Agent Security Constraints  
QX_AGENT_MAX_FILE_SIZE=10MB            # Maximum file size agents can read/write
QX_AGENT_ALLOWED_PATHS=./              # Paths agents can access (comma-separated)
QX_AGENT_FORBIDDEN_PATHS=/etc,/sys,/proc  # Paths agents cannot access (comma-separated)
QX_AGENT_APPROVAL_REQUIRED_TOOLS=      # Tools requiring approval (comma-separated)

# Agent Console Configuration
QX_AGENT_USE_CONSOLE_MANAGER=true      # Use console manager for output
QX_AGENT_SOURCE_IDENTIFIER=            # Agent identifier in console output
QX_AGENT_ENABLE_RICH_OUTPUT=true       # Enable rich text formatting
QX_AGENT_LOG_INTERACTIONS=true         # Log agent interactions

# Autonomous Agent Configuration
QX_AGENT_AUTONOMOUS_ENABLED=false      # Enable autonomous mode by default
QX_AGENT_MAX_CONCURRENT_TASKS=1        # Max concurrent tasks for autonomous agents
QX_AGENT_TASK_TIMEOUT=600              # Task timeout for autonomous agents (seconds)
QX_AGENT_HEARTBEAT_INTERVAL=30         # Heartbeat interval for autonomous agents (seconds)
QX_AGENT_AUTO_RESTART=false            # Auto-restart failed autonomous agents
QX_AGENT_POLL_INTERVAL=5               # Polling interval for autonomous agents (seconds)

# Agent Context Templates (optional)
QX_AGENT_CONTEXT=                      # Default context template
QX_AGENT_OUTPUT=                       # Default output formatting template

# === ENVIRONMENT-SPECIFIC SETTINGS ===

# Project Context (automatically loaded if present)
# QX_PROJECT_CONTEXT=  # Loaded from .Q/project.md
# QX_USER_CONTEXT=     # Loaded from ~/.config/qx/user.md
# QX_PROJECT_FILES=    # Auto-generated project file tree

# Performance Tuning (deprecated - use reliability settings above)
# QX_HTTP_TIMEOUT=300  # Use QX_REQUEST_TIMEOUT instead
# QX_MAX_RETRIES=3     # Use QX_NUM_RETRIES instead
# QX_RETRY_DELAY=1     # Use QX_RETRY_DELAY instead

# === ADVANCED RELIABILITY EXAMPLES ===

# Example 1: High Availability Setup
# QX_FALLBACK_MODELS=openrouter/openai/gpt-4o,openrouter/anthropic/claude-3.5-sonnet,openrouter/google/gemini-1.5-pro
# QX_NUM_RETRIES=5
# QX_FALLBACK_TIMEOUT=60

# Example 2: Cost-Optimized with Fallbacks  
# QX_MODEL_NAME=openrouter/meta-llama/llama-3.1-8b-instruct
# QX_FALLBACK_MODELS=openrouter/openai/gpt-3.5-turbo,openrouter/openai/gpt-4o-mini

# Example 3: Context Window Auto-Scaling
# QX_MODEL_NAME=gpt-3.5-turbo
# QX_CONTEXT_WINDOW_FALLBACKS={"gpt-3.5-turbo":"gpt-3.5-turbo-16k","gpt-4":"gpt-4-32k"}

# Example 4: Multi-Region Azure Setup
# QX_MODEL_NAME=azure/gpt-4
# QX_FALLBACK_API_BASES={"azure":[{"api_key":"key1","api_base":"https://east.openai.azure.com"},{"api_key":"key2","api_base":"https://west.openai.azure.com"}]}

# === AGENT SYSTEM EXAMPLES ===

# Example 1: Security-Focused Agent Environment
# QX_DEFAULT_AGENT=code_reviewer
# QX_AGENT_TEMPERATURE=0.3                    # Lower temperature for more consistent security analysis
# QX_AGENT_MAX_TOOL_CALLS=20                  # Allow more tool calls for thorough analysis
# QX_AGENT_APPROVAL_REQUIRED_TOOLS=execute_shell_tool,write_file_tool  # Require approval for risky operations

# Example 2: Autonomous Development Agent
# QX_DEFAULT_AGENT=devops_automation
# QX_AGENT_EXECUTION_MODE=autonomous          # Enable autonomous operation
# QX_AGENT_AUTONOMOUS_ENABLED=true            # Enable autonomous features
# QX_AGENT_MAX_CONCURRENT_TASKS=3             # Allow multiple concurrent tasks
# QX_AGENT_TASK_TIMEOUT=1800                  # 30 minutes per task
# QX_AGENT_AUTO_RESTART=true                  # Auto-restart if failed

# Example 3: Documentation-Focused Environment  
# QX_DEFAULT_AGENT=documentation_writer
# QX_AGENT_TEMPERATURE=0.7                    # Balanced creativity for writing
# QX_AGENT_MAX_TOKENS=8192                    # Longer responses for documentation
# QX_AGENT_TOOLS=read_file_tool,write_file_tool,web_fetch_tool  # Documentation-specific tools

# Example 4: High-Security Environment
# QX_AGENT_ALLOWED_PATHS=./src,./docs,./tests # Restrict file access to safe directories
# QX_AGENT_FORBIDDEN_PATHS=/,/etc,/sys,/proc,/home  # Comprehensive path restrictions
# QX_AGENT_MAX_FILE_SIZE=1MB                  # Smaller file size limit
# QX_AGENT_APPROVAL_REQUIRED_TOOLS=execute_shell_tool,write_file_tool,agent_manager_tool  # Require approval for all risky tools

# Example 5: Custom Agent Defaults
# QX_AGENT_NAME=my_company_agent             # Custom agent naming
# QX_AGENT_VERSION=2.1.0                     # Custom versioning
# QX_AGENT_DESCRIPTION=Company Development Assistant  # Custom description
# QX_AGENT_CONTEXT=Company: {company_name}\nProject: {project_name}\nEnvironment: {environment}  # Custom context template
# QX_AGENT_OUTPUT=Format responses in markdown with clear headings and examples  # Custom output formatting